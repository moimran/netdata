/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/schema/{table_name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Table Schema */
        get: operations["get_table_schema_api_v1_schema__table_name__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/reference/{table_name}/{field_name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Reference Options */
        get: operations["get_reference_options_api_v1_reference__table_name___field_name__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/all-tables": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Tables */
        get: operations["get_all_tables_api_v1_all_tables_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/device_inventory/{device_uuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Device Inventory By Device */
        get: operations["read_device_inventory_by_device_api_v1_device_inventory__device_uuid__get"];
        put?: never;
        post?: never;
        /** Delete Device Inventory By Device */
        delete: operations["delete_device_inventory_by_device_api_v1_device_inventory__device_uuid__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/regions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_regions_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_regions_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/regions/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_regions__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_regions__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_regions__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/site_groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_site_groups_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_site_groups_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/site_groups/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_site_groups__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_site_groups__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_site_groups__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/sites": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_sites_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_sites_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/sites/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_sites__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_sites__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_sites__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_locations_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_locations_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/locations/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_locations__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_locations__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_locations__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/rirs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_rirs_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_rirs_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/rirs/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_rirs__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_rirs__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_rirs__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/aggregates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_aggregates_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_aggregates_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/aggregates/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_aggregates__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_aggregates__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_aggregates__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/vrfs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_vrfs_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_vrfs_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/vrfs/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_vrfs__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_vrfs__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_vrfs__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/route_targets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_route_targets_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_route_targets_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/route_targets/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_route_targets__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_route_targets__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_route_targets__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_roles_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_roles_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/roles/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_roles__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_roles__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_roles__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/prefixes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_prefixes_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_prefixes_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/prefixes/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_prefixes__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_prefixes__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_prefixes__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/ip_ranges": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_ip_ranges_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_ip_ranges_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/ip_ranges/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_ip_ranges__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_ip_ranges__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_ip_ranges__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/ip_addresses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_ip_addresses_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_ip_addresses_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/ip_addresses/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_ip_addresses__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_ip_addresses__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_ip_addresses__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/vlans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_vlans_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_vlans_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/vlans/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_vlans__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_vlans__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_vlans__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/vlan_groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_vlan_groups_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_vlan_groups_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/vlan_groups/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_vlan_groups__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_vlan_groups__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_vlan_groups__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/platform_types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_platform_types_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_platform_types_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/platform_types/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_platform_types__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_platform_types__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_platform_types__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/tenants": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_tenants_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_tenants_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/tenants/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_tenants__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_tenants__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_tenants__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/interfaces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_interfaces_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_interfaces_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/interfaces/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_interfaces__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_interfaces__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_interfaces__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/device_inventory": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_device_inventory_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_device_inventory_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/device_inventory/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_device_inventory__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_device_inventory__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_device_inventory__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/asns": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_asns_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_asns_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/asns/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_asns__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_asns__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_asns__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/asn_ranges": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_asn_ranges_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_asn_ranges_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/asn_ranges/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_asn_ranges__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_asn_ranges__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_asn_ranges__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/credentials": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_credentials_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_credentials_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/credentials/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_credentials__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_credentials__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_credentials__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/net_jobs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_v1_net_jobs_get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_net_jobs_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/net_jobs/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_v1_net_jobs__item_id__get"];
        /** Update Item */
        put: operations["update_item_api_v1_net_jobs__item_id__put"];
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_net_jobs__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login For Access Token */
        post: operations["login_for_access_token_api_v1_auth_token_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Login
         * @description More user-friendly login endpoint that accepts JSON instead of form data
         */
        post: operations["login_api_v1_auth_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Register User
         * @description Register a new user
         */
        post: operations["register_user_api_v1_auth_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Read Users Me
         * @description Get current user information
         */
        get: operations["read_users_me_api_v1_auth_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Root */
        get: operations["root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * ASNCreate
         * @example {
         *       "asn": 65001,
         *       "custom_fields": {
         *         "region": "Core"
         *       },
         *       "description": "Example Private ASN",
         *       "rir_id": 1,
         *       "tenant_id": 1
         *     }
         */
        ASNCreate: {
            /** Asn */
            asn: number;
            /** Rir Id */
            rir_id: number;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Description */
            description?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /**
         * ASNRangeCreate
         * @example {
         *       "description": "Range for internal use",
         *       "end_asn": 65534,
         *       "name": "Private ASN Range 1",
         *       "rir_id": 1,
         *       "slug": "private-asn-range-1",
         *       "start_asn": 64512,
         *       "tenant_id": 1
         *     }
         */
        ASNRangeCreate: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Rir Id */
            rir_id: number;
            /** Start Asn */
            start_asn: number;
            /** End Asn */
            end_asn: number;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Description */
            description?: string | null;
        };
        /** ASNRangeRead */
        ASNRangeRead: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Rir Id */
            rir_id: number;
            /** Start Asn */
            start_asn: number;
            /** End Asn */
            end_asn: number;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Description */
            description?: string | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** ASNRangeUpdate */
        ASNRangeUpdate: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Rir Id */
            rir_id?: number | null;
            /** Start Asn */
            start_asn?: number | null;
            /** End Asn */
            end_asn?: number | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Description */
            description?: string | null;
        };
        /** ASNRead */
        ASNRead: {
            /** Asn */
            asn: number;
            /** Rir Id */
            rir_id: number;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Description */
            description?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** ASNUpdate */
        ASNUpdate: {
            /** Asn */
            asn?: number | null;
            /** Rir Id */
            rir_id?: number | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Description */
            description?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /**
         * AggregateCreate
         * @example {
         *       "custom_fields": {
         *         "allocation_source": "Internal"
         *       },
         *       "description": "RFC1918 Private Space",
         *       "name": "RFC1918 Private Space",
         *       "prefix": "10.0.0.0/8",
         *       "rir_id": 1,
         *       "slug": "rfc1918-private-space"
         *     }
         */
        AggregateCreate: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Prefix */
            prefix: string;
            /** Rir Id */
            rir_id: number;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Date Added */
            date_added?: string | null;
            /** Description */
            description?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /** AggregateRead */
        AggregateRead: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Prefix */
            prefix: string;
            /** Rir Id */
            rir_id: number;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Date Added */
            date_added?: string | null;
            /** Description */
            description?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** AggregateUpdate */
        AggregateUpdate: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Prefix */
            prefix?: string | null;
            /** Rir Id */
            rir_id?: number | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Date Added */
            date_added?: string | null;
            /** Description */
            description?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /** Body_login_for_access_token_api_v1_auth_token_post */
        Body_login_for_access_token_api_v1_auth_token_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /** Client Secret */
            client_secret?: string | null;
        };
        /**
         * CredentialCreate
         * @example {
         *       "comments": "Rotate quarterly",
         *       "credential_type_id": 1,
         *       "custom_fields": {
         *         "owner_team": "Network Ops"
         *       },
         *       "data": {
         *         "password": "secretpassword123",
         *         "username": "admin"
         *       },
         *       "description": "Credentials for accessing core routers",
         *       "name": "Router SSH Creds"
         *     }
         */
        CredentialCreate: {
            /** Name */
            name: string;
            /** Credential Type Id */
            credential_type_id: number;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
            /** Data */
            data?: Record<string, never> | null;
        };
        /** CredentialRead */
        CredentialRead: {
            /** Name */
            name: string;
            /** Credential Type Id */
            credential_type_id: number;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** CredentialUpdate */
        CredentialUpdate: {
            /** Name */
            name?: string | null;
            /** Credential Type Id */
            credential_type_id?: number | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
            /** Data */
            data?: Record<string, never> | null;
        };
        /** DeviceInventoryCreate */
        DeviceInventoryCreate: {
            /**
             * Hostname
             * @description Hostname of the device
             */
            hostname: string;
            /**
             * Ip Address
             * @description IP address of the device
             */
            ip_address: string;
            /**
             * Serial Number
             * @description Serial number of the device
             */
            serial_number?: string | null;
            /**
             * Model
             * @description Model of the device
             */
            model?: string | null;
            /**
             * Vendor
             * @description Vendor of the device
             */
            vendor?: string | null;
            /**
             * Os Version
             * @description OS version of the device
             */
            os_version?: string | null;
            /**
             * Uptime
             * @description Uptime of the device
             */
            uptime?: string | null;
            /**
             * Last Seen
             * @description Last time the device was seen
             */
            last_seen?: string | null;
            /**
             * Status
             * @description Status of the device
             * @default active
             */
            status: string | null;
            /**
             * Site Id
             * @description Site ID
             */
            site_id?: string | null;
            /**
             * Tenant Id
             * @description Tenant ID
             */
            tenant_id?: string | null;
            /**
             * Platform Type Id
             * @description Platform type ID
             */
            platform_type_id?: string | null;
            /**
             * Credential Id
             * @description Credential ID
             */
            credential_id?: string | null;
        };
        /** DeviceInventoryRead */
        DeviceInventoryRead: {
            /**
             * Hostname
             * @description Hostname of the device
             */
            hostname: string;
            /**
             * Ip Address
             * @description IP address of the device
             */
            ip_address: string;
            /**
             * Serial Number
             * @description Serial number of the device
             */
            serial_number?: string | null;
            /**
             * Model
             * @description Model of the device
             */
            model?: string | null;
            /**
             * Vendor
             * @description Vendor of the device
             */
            vendor?: string | null;
            /**
             * Os Version
             * @description OS version of the device
             */
            os_version?: string | null;
            /**
             * Uptime
             * @description Uptime of the device
             */
            uptime?: string | null;
            /**
             * Last Seen
             * @description Last time the device was seen
             */
            last_seen?: string | null;
            /**
             * Status
             * @description Status of the device
             * @default active
             */
            status: string | null;
            /**
             * Site Id
             * @description Site ID
             */
            site_id?: string | null;
            /**
             * Tenant Id
             * @description Tenant ID
             */
            tenant_id?: string | null;
            /**
             * Platform Type Id
             * @description Platform type ID
             */
            platform_type_id?: string | null;
            /**
             * Credential Id
             * @description Credential ID
             */
            credential_id?: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** DeviceInventoryUpdate */
        DeviceInventoryUpdate: {
            /** Hostname */
            hostname?: string | null;
            /** Ip Address */
            ip_address?: string | null;
            /** Serial Number */
            serial_number?: string | null;
            /** Model */
            model?: string | null;
            /** Vendor */
            vendor?: string | null;
            /** Os Version */
            os_version?: string | null;
            /** Uptime */
            uptime?: string | null;
            /** Last Seen */
            last_seen?: string | null;
            /** Status */
            status?: string | null;
            /** Site Id */
            site_id?: string | null;
            /** Tenant Id */
            tenant_id?: string | null;
            /** Platform Type Id */
            platform_type_id?: string | null;
            /** Credential Id */
            credential_id?: string | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * IPAddressCreate
         * @example {
         *       "address": "192.168.1.1/24",
         *       "comments": "Primary router interface IP",
         *       "custom_fields": {
         *         "monitored": true
         *       },
         *       "description": "Default Gateway for Office LAN",
         *       "dns_name": "gateway.office.example.com",
         *       "interface_id": 5,
         *       "role": "VIP",
         *       "status": "active",
         *       "tenant_id": 1,
         *       "vrf_id": 1
         *     }
         */
        IPAddressCreate: {
            /** Address */
            address: string;
            /** Prefix Id */
            prefix_id?: number | null;
            /** Vrf Id */
            vrf_id?: number | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Status */
            status: string;
            /** Role */
            role?: string | null;
            /** Interface Id */
            interface_id?: number | null;
            /** Dns Name */
            dns_name?: string | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /** IPAddressRead */
        IPAddressRead: {
            /** Address */
            address: string;
            /** Prefix Id */
            prefix_id?: number | null;
            /** Vrf Id */
            vrf_id?: number | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Status */
            status: string;
            /** Role */
            role?: string | null;
            /** Interface Id */
            interface_id?: number | null;
            /** Dns Name */
            dns_name?: string | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** IPAddressUpdate */
        IPAddressUpdate: {
            /** Address */
            address?: string | null;
            /** Prefix Id */
            prefix_id?: number | null;
            /** Vrf Id */
            vrf_id?: number | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Status */
            status?: string | null;
            /** Role */
            role?: string | null;
            /** Interface Id */
            interface_id?: number | null;
            /** Dns Name */
            dns_name?: string | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /**
         * IPRangeCreate
         * @example {
         *       "comments": "Reserved for dynamic assignment",
         *       "custom_fields": {
         *         "lease_time": 86400
         *       },
         *       "description": "DHCP allocation range for Office LAN",
         *       "end_address": "192.168.1.200",
         *       "prefix_id": 1,
         *       "role_id": 2,
         *       "size": 101,
         *       "start_address": "192.168.1.100",
         *       "status": "active",
         *       "tenant_id": 1,
         *       "vrf_id": 1
         *     }
         */
        IPRangeCreate: {
            /** Name */
            name: string;
            /** Slug */
            slug: string;
            /** Start Address */
            start_address: string;
            /** End Address */
            end_address: string;
            /** Size */
            size?: number | null;
            /** Prefix Id */
            prefix_id?: number | null;
            /** Vrf Id */
            vrf_id?: number | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Status */
            status: string;
            /** Role Id */
            role_id?: number | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /** IPRangeRead */
        IPRangeRead: {
            /** Name */
            name: string;
            /** Slug */
            slug: string;
            /** Start Address */
            start_address: string;
            /** End Address */
            end_address: string;
            /** Size */
            size?: number | null;
            /** Prefix Id */
            prefix_id?: number | null;
            /** Vrf Id */
            vrf_id?: number | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Status */
            status: string;
            /** Role Id */
            role_id?: number | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** IPRangeUpdate */
        IPRangeUpdate: {
            /** Name */
            name: string;
            /** Slug */
            slug: string;
            /** Start Address */
            start_address?: string | null;
            /** End Address */
            end_address?: string | null;
            /** Size */
            size?: number | null;
            /** Prefix Id */
            prefix_id?: number | null;
            /** Vrf Id */
            vrf_id?: number | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Status */
            status?: string | null;
            /** Role Id */
            role_id?: number | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /** InterfaceCreate */
        InterfaceCreate: {
            /**
             * Interface Name
             * @description Name of the interface
             */
            interface_name: string;
            /**
             * Hardware Type
             * @description Hardware type of the interface
             */
            hardware_type: string;
            /**
             * Mac Address
             * @description MAC address of the interface
             */
            mac_address: string;
            /**
             * Bia
             * @description Burned-in MAC address
             */
            bia: string;
            /**
             * Interface Status
             * @description Status of the interface
             */
            interface_status?: string | null;
            /**
             * Protocol Status
             * @description Protocol status of the interface
             */
            protocol_status?: string | null;
            /**
             * Operational Mode
             * @description Operational mode of the interface
             */
            operational_mode?: string | null;
            /**
             * Administrative Mode
             * @description Administrative mode of the interface
             */
            administrative_mode?: string | null;
            /**
             * Media Type
             * @description Media type of the interface
             */
            media_type?: string | null;
            /**
             * Ipv4 Address
             * @description IPv4 address of the interface
             */
            ipv4_address?: string | null;
            /**
             * Subnet Mask
             * @description Subnet mask of the interface
             */
            subnet_mask?: string | null;
            /**
             * Ipv6 Address
             * @description IPv6 address of the interface
             */
            ipv6_address?: string | null;
            /**
             * Virtual Ipv4 Address
             * @description Virtual IPv4 address of the interface
             */
            virtual_ipv4_address?: string | null;
            /**
             * Mtu
             * @description MTU of the interface
             */
            mtu?: string | null;
            /**
             * Duplex
             * @description Duplex mode of the interface
             */
            duplex?: string | null;
            /**
             * Speed
             * @description Speed of the interface
             */
            speed?: string | null;
            /**
             * Bandwidth
             * @description Bandwidth of the interface
             */
            bandwidth?: string | null;
            /**
             * Net Port Channel Id
             * @description Port channel ID
             */
            net_port_channel_id?: number | null;
            /**
             * Group Number
             * @description Group number
             */
            group_number?: string | null;
            /**
             * Group Name
             * @description Group name
             */
            group_name?: string | null;
            /**
             * Native Vlan
             * @description Native VLAN
             */
            native_vlan?: string | null;
            /**
             * Access Vlan
             * @description Access VLAN
             */
            access_vlan?: string | null;
            /**
             * Voice Vlan
             * @description Voice VLAN
             */
            voice_vlan?: string | null;
            /**
             * Switchport
             * @description Switchport mode
             */
            switchport?: string | null;
            /**
             * Switchport Monitor
             * @description Switchport monitor mode
             */
            switchport_monitor?: string | null;
            /**
             * Trunking Vlans
             * @description Trunking VLANs
             */
            trunking_vlans?: string | null;
            /**
             * Version
             * @description HSRP version
             */
            version?: string | null;
            /**
             * Preempt
             * @description HSRP preempt
             */
            preempt?: string | null;
            /**
             * Active Router
             * @description HSRP active router
             */
            active_router?: string | null;
            /**
             * Active Virtual Mac
             * @description HSRP active virtual MAC
             */
            active_virtual_mac?: string | null;
            /**
             * Hsrp Router State
             * @description HSRP router state
             */
            hsrp_router_state?: string | null;
            /**
             * Configured Priority
             * @description HSRP configured priority
             */
            configured_priority?: string | null;
            /**
             * Priority
             * @description HSRP priority
             */
            priority?: string | null;
            /**
             * Standby Router
             * @description HSRP standby router
             */
            standby_router?: string | null;
            /**
             * Standby Router Priority
             * @description HSRP standby router priority
             */
            standby_router_priority?: string | null;
            /**
             * Num State Changes
             * @description HSRP number of state changes
             */
            num_state_changes?: string | null;
            /**
             * Last State Change
             * @description HSRP last state change
             */
            last_state_change?: string | null;
            /**
             * Interface Zone
             * @description Interface security zone
             */
            interface_zone?: string | null;
            /**
             * Vrf Id
             * @description VRF ID
             */
            vrf_id?: string | null;
            /**
             * Device Id
             * Format: uuid
             * @description Device ID
             */
            device_id: string;
            /**
             * Parent Id
             * @description Parent interface ID
             */
            parent_id?: number | null;
            /**
             * Untagged Vlan Id
             * @description Untagged VLAN ID
             */
            untagged_vlan_id?: number | null;
        };
        /** InterfaceRead */
        InterfaceRead: {
            /**
             * Interface Name
             * @description Name of the interface
             */
            interface_name: string;
            /**
             * Hardware Type
             * @description Hardware type of the interface
             */
            hardware_type: string;
            /**
             * Mac Address
             * @description MAC address of the interface
             */
            mac_address: string;
            /**
             * Bia
             * @description Burned-in MAC address
             */
            bia: string;
            /**
             * Interface Status
             * @description Status of the interface
             */
            interface_status?: string | null;
            /**
             * Protocol Status
             * @description Protocol status of the interface
             */
            protocol_status?: string | null;
            /**
             * Operational Mode
             * @description Operational mode of the interface
             */
            operational_mode?: string | null;
            /**
             * Administrative Mode
             * @description Administrative mode of the interface
             */
            administrative_mode?: string | null;
            /**
             * Media Type
             * @description Media type of the interface
             */
            media_type?: string | null;
            /**
             * Ipv4 Address
             * @description IPv4 address of the interface
             */
            ipv4_address?: string | null;
            /**
             * Subnet Mask
             * @description Subnet mask of the interface
             */
            subnet_mask?: string | null;
            /**
             * Ipv6 Address
             * @description IPv6 address of the interface
             */
            ipv6_address?: string | null;
            /**
             * Virtual Ipv4 Address
             * @description Virtual IPv4 address of the interface
             */
            virtual_ipv4_address?: string | null;
            /**
             * Mtu
             * @description MTU of the interface
             */
            mtu?: string | null;
            /**
             * Duplex
             * @description Duplex mode of the interface
             */
            duplex?: string | null;
            /**
             * Speed
             * @description Speed of the interface
             */
            speed?: string | null;
            /**
             * Bandwidth
             * @description Bandwidth of the interface
             */
            bandwidth?: string | null;
            /**
             * Net Port Channel Id
             * @description Port channel ID
             */
            net_port_channel_id?: number | null;
            /**
             * Group Number
             * @description Group number
             */
            group_number?: string | null;
            /**
             * Group Name
             * @description Group name
             */
            group_name?: string | null;
            /**
             * Native Vlan
             * @description Native VLAN
             */
            native_vlan?: string | null;
            /**
             * Access Vlan
             * @description Access VLAN
             */
            access_vlan?: string | null;
            /**
             * Voice Vlan
             * @description Voice VLAN
             */
            voice_vlan?: string | null;
            /**
             * Switchport
             * @description Switchport mode
             */
            switchport?: string | null;
            /**
             * Switchport Monitor
             * @description Switchport monitor mode
             */
            switchport_monitor?: string | null;
            /**
             * Trunking Vlans
             * @description Trunking VLANs
             */
            trunking_vlans?: string | null;
            /**
             * Version
             * @description HSRP version
             */
            version?: string | null;
            /**
             * Preempt
             * @description HSRP preempt
             */
            preempt?: string | null;
            /**
             * Active Router
             * @description HSRP active router
             */
            active_router?: string | null;
            /**
             * Active Virtual Mac
             * @description HSRP active virtual MAC
             */
            active_virtual_mac?: string | null;
            /**
             * Hsrp Router State
             * @description HSRP router state
             */
            hsrp_router_state?: string | null;
            /**
             * Configured Priority
             * @description HSRP configured priority
             */
            configured_priority?: string | null;
            /**
             * Priority
             * @description HSRP priority
             */
            priority?: string | null;
            /**
             * Standby Router
             * @description HSRP standby router
             */
            standby_router?: string | null;
            /**
             * Standby Router Priority
             * @description HSRP standby router priority
             */
            standby_router_priority?: string | null;
            /**
             * Num State Changes
             * @description HSRP number of state changes
             */
            num_state_changes?: string | null;
            /**
             * Last State Change
             * @description HSRP last state change
             */
            last_state_change?: string | null;
            /**
             * Interface Zone
             * @description Interface security zone
             */
            interface_zone?: string | null;
            /**
             * Vrf Id
             * @description VRF ID
             */
            vrf_id?: string | null;
            /**
             * Device Id
             * Format: uuid
             * @description Device ID
             */
            device_id: string;
            /**
             * Parent Id
             * @description Parent interface ID
             */
            parent_id?: number | null;
            /**
             * Untagged Vlan Id
             * @description Untagged VLAN ID
             */
            untagged_vlan_id?: number | null;
            /** Id */
            id: number;
        };
        /** InterfaceUpdate */
        InterfaceUpdate: {
            /** Interface Name */
            interface_name?: string | null;
            /** Hardware Type */
            hardware_type?: string | null;
            /** Mac Address */
            mac_address?: string | null;
            /** Bia */
            bia?: string | null;
            /** Interface Status */
            interface_status?: string | null;
            /** Protocol Status */
            protocol_status?: string | null;
            /** Operational Mode */
            operational_mode?: string | null;
            /** Administrative Mode */
            administrative_mode?: string | null;
            /** Media Type */
            media_type?: string | null;
            /** Ipv4 Address */
            ipv4_address?: string | null;
            /** Subnet Mask */
            subnet_mask?: string | null;
            /** Ipv6 Address */
            ipv6_address?: string | null;
            /** Virtual Ipv4 Address */
            virtual_ipv4_address?: string | null;
            /** Mtu */
            mtu?: string | null;
            /** Duplex */
            duplex?: string | null;
            /** Speed */
            speed?: string | null;
            /** Bandwidth */
            bandwidth?: string | null;
            /** Net Port Channel Id */
            net_port_channel_id?: number | null;
            /** Group Number */
            group_number?: string | null;
            /** Group Name */
            group_name?: string | null;
            /** Native Vlan */
            native_vlan?: string | null;
            /** Access Vlan */
            access_vlan?: string | null;
            /** Voice Vlan */
            voice_vlan?: string | null;
            /** Switchport */
            switchport?: string | null;
            /** Switchport Monitor */
            switchport_monitor?: string | null;
            /** Trunking Vlans */
            trunking_vlans?: string | null;
            /** Version */
            version?: string | null;
            /** Preempt */
            preempt?: string | null;
            /** Active Router */
            active_router?: string | null;
            /** Active Virtual Mac */
            active_virtual_mac?: string | null;
            /** Hsrp Router State */
            hsrp_router_state?: string | null;
            /** Configured Priority */
            configured_priority?: string | null;
            /** Priority */
            priority?: string | null;
            /** Standby Router */
            standby_router?: string | null;
            /** Standby Router Priority */
            standby_router_priority?: string | null;
            /** Num State Changes */
            num_state_changes?: string | null;
            /** Last State Change */
            last_state_change?: string | null;
            /** Interface Zone */
            interface_zone?: string | null;
            /** Vrf Id */
            vrf_id?: string | null;
            /** Device Id */
            device_id?: string | null;
            /** Parent Id */
            parent_id?: number | null;
            /** Untagged Vlan Id */
            untagged_vlan_id?: number | null;
        };
        /**
         * LocationCreate
         * @example {
         *       "description": "Main server cage",
         *       "name": "Cage 101, Row B",
         *       "site_id": "123e4567-e89b-12d3-a456-426614174000",
         *       "slug": "cage-101-row-b"
         *     }
         */
        LocationCreate: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /**
             * Site Id
             * Format: uuid
             */
            site_id: string;
            /** Parent Id */
            parent_id?: string | null;
            /** Description */
            description?: string | null;
            /** Tenant Id */
            tenant_id?: string | null;
        };
        /** LocationRead */
        LocationRead: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /**
             * Site Id
             * Format: uuid
             */
            site_id: string;
            /** Parent Id */
            parent_id?: string | null;
            /** Description */
            description?: string | null;
            /** Tenant Id */
            tenant_id?: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** LocationUpdate */
        LocationUpdate: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Site Id */
            site_id?: string | null;
            /** Parent Id */
            parent_id?: string | null;
            /** Description */
            description?: string | null;
            /** Tenant Id */
            tenant_id?: string | null;
        };
        /**
         * LoginRequest
         * @example {
         *       "password": "securepassword",
         *       "username": "johndoe"
         *     }
         */
        LoginRequest: {
            /** Username */
            username: string;
            /** Password */
            password: string;
        };
        /**
         * NetJobCreate
         * @description Schema for creating a new NetJob.
         * @example {
         *       "command_list": [
         *         "show running-config",
         *         "copy running-config tftp://..."
         *       ],
         *       "connection_library": "NETMIKO",
         *       "connection_protocol": "ssh",
         *       "description": "Runs backup commands on core routers daily.",
         *       "extra_config": {
         *         "delay_factor": 2
         *       },
         *       "is_encrypted": false,
         *       "is_parse": true,
         *       "is_scheduled": true,
         *       "name": "Daily Backup",
         *       "next_run": "2025-05-01T02:00:00Z",
         *       "platform_type_id": 1,
         *       "slug": "daily-backup",
         *       "status": "ACTIVE"
         *     }
         */
        NetJobCreate: {
            /**
             * Name
             * @description Job name
             */
            name: string;
            /**
             * Slug
             * @description URL-friendly slug
             */
            slug?: string | null;
            /**
             * Description
             * @description Detailed description of the job
             */
            description?: string | null;
            /**
             * Platform Type Id
             * @description ID of the associated PlatformType
             */
            platform_type_id?: number | null;
            /**
             * Command List
             * @description List of commands to execute
             */
            command_list: string[];
            /**
             * Is Scheduled
             * @description Whether the job is scheduled to run periodically
             * @default false
             */
            is_scheduled: boolean;
            /**
             * Next Run
             * @description Timestamp of the next scheduled run
             */
            next_run?: string | null;
            /**
             * Last Run
             * @description Timestamp of the last execution
             */
            last_run?: string | null;
            /**
             * Connection Protocol
             * @description Connection protocol (e.g., ssh, telnet)
             * @default ssh
             */
            connection_protocol: string;
            /**
             * Connection Library
             * @description Library used for connection (e.g., NETMIKO, NAPALM)
             * @default NETMIKO
             */
            connection_library: string;
            /**
             * Is Encrypted
             * @description Whether connection details are encrypted
             * @default false
             */
            is_encrypted: boolean;
            /**
             * Is Parse
             * @description Whether to parse the command output
             * @default true
             */
            is_parse: boolean;
            /**
             * Extra Config
             * @description Additional configuration parameters
             */
            extra_config?: Record<string, never> | null;
            /**
             * Status
             * @description Job status (e.g., ACTIVE, INACTIVE)
             * @default ACTIVE
             */
            status: string;
        };
        /**
         * NetJobRead
         * @description Schema for reading NetJob data, including generated fields.
         */
        NetJobRead: {
            /**
             * Name
             * @description Job name
             */
            name: string;
            /**
             * Slug
             * @description URL-friendly slug
             */
            slug?: string | null;
            /**
             * Description
             * @description Detailed description of the job
             */
            description?: string | null;
            /**
             * Platform Type Id
             * @description ID of the associated PlatformType
             */
            platform_type_id?: number | null;
            /**
             * Command List
             * @description List of commands to execute
             */
            command_list: string[];
            /**
             * Is Scheduled
             * @description Whether the job is scheduled to run periodically
             * @default false
             */
            is_scheduled: boolean;
            /**
             * Next Run
             * @description Timestamp of the next scheduled run
             */
            next_run?: string | null;
            /**
             * Last Run
             * @description Timestamp of the last execution
             */
            last_run?: string | null;
            /**
             * Connection Protocol
             * @description Connection protocol (e.g., ssh, telnet)
             * @default ssh
             */
            connection_protocol: string;
            /**
             * Connection Library
             * @description Library used for connection (e.g., NETMIKO, NAPALM)
             * @default NETMIKO
             */
            connection_library: string;
            /**
             * Is Encrypted
             * @description Whether connection details are encrypted
             * @default false
             */
            is_encrypted: boolean;
            /**
             * Is Parse
             * @description Whether to parse the command output
             * @default true
             */
            is_parse: boolean;
            /**
             * Extra Config
             * @description Additional configuration parameters
             */
            extra_config?: Record<string, never> | null;
            /**
             * Status
             * @description Job status (e.g., ACTIVE, INACTIVE)
             * @default ACTIVE
             */
            status: string;
            /** Id */
            id: number;
            /**
             * Job Uuid
             * Format: uuid
             */
            job_uuid: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
            platform_type?: components["schemas"]["PlatformTypeRead"] | null;
        };
        /**
         * NetJobUpdate
         * @description Schema for updating an existing NetJob. All fields are optional.
         */
        NetJobUpdate: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Platform Type Id */
            platform_type_id?: number | null;
            /** Command List */
            command_list?: string[] | null;
            /** Is Scheduled */
            is_scheduled?: boolean | null;
            /** Next Run */
            next_run?: string | null;
            /** Last Run */
            last_run?: string | null;
            /** Connection Protocol */
            connection_protocol?: string | null;
            /** Connection Library */
            connection_library?: string | null;
            /** Is Encrypted */
            is_encrypted?: boolean | null;
            /** Is Parse */
            is_parse?: boolean | null;
            /** Extra Config */
            extra_config?: Record<string, never> | null;
            /** Status */
            status?: string | null;
        };
        /** PaginatedResponse[ASNRangeRead] */
        PaginatedResponse_ASNRangeRead_: {
            /** Items */
            items: components["schemas"]["ASNRangeRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[ASNRead] */
        PaginatedResponse_ASNRead_: {
            /** Items */
            items: components["schemas"]["ASNRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[AggregateRead] */
        PaginatedResponse_AggregateRead_: {
            /** Items */
            items: components["schemas"]["AggregateRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[CredentialRead] */
        PaginatedResponse_CredentialRead_: {
            /** Items */
            items: components["schemas"]["CredentialRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[DeviceInventoryRead] */
        PaginatedResponse_DeviceInventoryRead_: {
            /** Items */
            items: components["schemas"]["DeviceInventoryRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[IPAddressRead] */
        PaginatedResponse_IPAddressRead_: {
            /** Items */
            items: components["schemas"]["IPAddressRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[IPRangeRead] */
        PaginatedResponse_IPRangeRead_: {
            /** Items */
            items: components["schemas"]["IPRangeRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[InterfaceRead] */
        PaginatedResponse_InterfaceRead_: {
            /** Items */
            items: components["schemas"]["InterfaceRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[LocationRead] */
        PaginatedResponse_LocationRead_: {
            /** Items */
            items: components["schemas"]["LocationRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[NetJobRead] */
        PaginatedResponse_NetJobRead_: {
            /** Items */
            items: components["schemas"]["NetJobRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[PlatformTypeRead] */
        PaginatedResponse_PlatformTypeRead_: {
            /** Items */
            items: components["schemas"]["PlatformTypeRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[PrefixRead] */
        PaginatedResponse_PrefixRead_: {
            /** Items */
            items: components["schemas"]["PrefixRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[RIRRead] */
        PaginatedResponse_RIRRead_: {
            /** Items */
            items: components["schemas"]["RIRRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[RegionRead] */
        PaginatedResponse_RegionRead_: {
            /** Items */
            items: components["schemas"]["RegionRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[RoleRead] */
        PaginatedResponse_RoleRead_: {
            /** Items */
            items: components["schemas"]["RoleRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[RouteTargetRead] */
        PaginatedResponse_RouteTargetRead_: {
            /** Items */
            items: components["schemas"]["RouteTargetRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[SiteGroupRead] */
        PaginatedResponse_SiteGroupRead_: {
            /** Items */
            items: components["schemas"]["SiteGroupRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[SiteRead] */
        PaginatedResponse_SiteRead_: {
            /** Items */
            items: components["schemas"]["SiteRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[TenantRead] */
        PaginatedResponse_TenantRead_: {
            /** Items */
            items: components["schemas"]["TenantRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[VLANGroupRead] */
        PaginatedResponse_VLANGroupRead_: {
            /** Items */
            items: components["schemas"]["VLANGroupRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[VLANRead] */
        PaginatedResponse_VLANRead_: {
            /** Items */
            items: components["schemas"]["VLANRead"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /** PaginatedResponse[VRFReadWithTargets] */
        PaginatedResponse_VRFReadWithTargets_: {
            /** Items */
            items: components["schemas"]["VRFReadWithTargets"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Size */
            size: number;
        };
        /**
         * PlatformTypeCreate
         * @example {
         *       "command": "show version",
         *       "description": "Standard Cisco IOS Router",
         *       "ignore_platform": false,
         *       "name": "Cisco IOS Router",
         *       "platform_signature": "CiscoIos",
         *       "platform_type": "cisco_ios",
         *       "slug": "cisco-ios-router"
         *     }
         */
        PlatformTypeCreate: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Platform Signature */
            platform_signature: string;
            /** Platform Type */
            platform_type: string;
            /** Command */
            command?: string | null;
            /**
             * Ignore Platform
             * @default false
             */
            ignore_platform: boolean;
        };
        /** PlatformTypeRead */
        PlatformTypeRead: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Platform Signature */
            platform_signature: string;
            /** Platform Type */
            platform_type: string;
            /** Command */
            command?: string | null;
            /**
             * Ignore Platform
             * @default false
             */
            ignore_platform: boolean;
            /** Id */
            id: number;
        };
        /** PlatformTypeUpdate */
        PlatformTypeUpdate: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Platform Signature */
            platform_signature?: string | null;
            /** Platform Type */
            platform_type?: string | null;
            /** Command */
            command?: string | null;
            /** Ignore Platform */
            ignore_platform?: boolean | null;
        };
        /**
         * PrefixCreate
         * @example {
         *       "comments": "Standard user network",
         *       "custom_fields": {
         *         "dhcp_scope": "192.168.1.100-200"
         *       },
         *       "description": "Office LAN Subnet",
         *       "is_critical": false,
         *       "is_pool": false,
         *       "prefix": "192.168.1.0/24",
         *       "role_id": 1,
         *       "site_id": 1,
         *       "status": "active",
         *       "tenant_id": 1,
         *       "vlan_id": 10,
         *       "vrf_id": 1
         *     }
         */
        PrefixCreate: {
            /** Prefix */
            prefix: string;
            /** Site Id */
            site_id?: number | null;
            /** Vrf Id */
            vrf_id?: number | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Vlan Id */
            vlan_id?: number | null;
            /** Status */
            status: string;
            /** Role Id */
            role_id?: number | null;
            /**
             * Is Pool
             * @default false
             */
            is_pool: boolean;
            /**
             * Is Critical
             * @default false
             */
            is_critical: boolean;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /** PrefixRead */
        PrefixRead: {
            /** Prefix */
            prefix: string;
            /** Site Id */
            site_id?: number | null;
            /** Vrf Id */
            vrf_id?: number | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Vlan Id */
            vlan_id?: number | null;
            /** Status */
            status: string;
            /** Role Id */
            role_id?: number | null;
            /**
             * Is Pool
             * @default false
             */
            is_pool: boolean;
            /**
             * Is Critical
             * @default false
             */
            is_critical: boolean;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** PrefixUpdate */
        PrefixUpdate: {
            /** Prefix */
            prefix?: string | null;
            /** Site Id */
            site_id?: number | null;
            /** Vrf Id */
            vrf_id?: number | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Vlan Id */
            vlan_id?: number | null;
            /** Status */
            status?: string | null;
            /** Role Id */
            role_id?: number | null;
            /** Is Pool */
            is_pool?: boolean | null;
            /** Is Critical */
            is_critical?: boolean | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /**
         * RIRCreate
         * @example {
         *       "description": "American Registry for Internet Numbers",
         *       "is_private": false,
         *       "name": "ARIN",
         *       "slug": "arin"
         *     }
         */
        RIRCreate: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /**
             * Is Private
             * @default false
             */
            is_private: boolean;
            /** Description */
            description?: string | null;
        };
        /** RIRRead */
        RIRRead: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /**
             * Is Private
             * @default false
             */
            is_private: boolean;
            /** Description */
            description?: string | null;
            /** Id */
            id: number;
        };
        /** RIRUpdate */
        RIRUpdate: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Is Private */
            is_private?: boolean | null;
            /** Description */
            description?: string | null;
        };
        /**
         * RegionCreate
         * @example {
         *       "description": "North American Region",
         *       "name": "North America",
         *       "slug": "north-america"
         *     }
         */
        RegionCreate: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Parent Id */
            parent_id?: string | null;
        };
        /** RegionRead */
        RegionRead: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Parent Id */
            parent_id?: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** RegionUpdate */
        RegionUpdate: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Parent Id */
            parent_id?: string | null;
        };
        /**
         * RoleCreate
         * @example {
         *       "description": "Subnets allocated for servers",
         *       "name": "Server Subnet",
         *       "slug": "server-subnet",
         *       "weight": 100
         *     }
         */
        RoleCreate: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /**
             * Weight
             * @default 1000
             */
            weight: number;
            /** Description */
            description?: string | null;
        };
        /** RoleRead */
        RoleRead: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /**
             * Weight
             * @default 1000
             */
            weight: number;
            /** Description */
            description?: string | null;
            /** Id */
            id: number;
        };
        /** RoleUpdate */
        RoleUpdate: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Weight */
            weight?: number | null;
            /** Description */
            description?: string | null;
        };
        /** RouteTargetCreate */
        RouteTargetCreate: {
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
        };
        /** RouteTargetRead */
        RouteTargetRead: {
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Id */
            id: number;
        };
        /** RouteTargetUpdate */
        RouteTargetUpdate: {
            /** Name */
            name?: string | null;
            /** Description */
            description?: string | null;
        };
        /**
         * SiteCreate
         * @example {
         *       "description": "Main office location",
         *       "name": "Main Office",
         *       "region_id": "123e4567-e89b-12d3-a456-426614174000",
         *       "slug": "main-office",
         *       "status": "active"
         *     }
         */
        SiteCreate: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Status */
            status: string;
            /** Region Id */
            region_id?: string | null;
            /** Site Group Id */
            site_group_id?: string | null;
            /** Tenant Id */
            tenant_id?: string | null;
            /** Facility */
            facility?: string | null;
            /** Asn Id */
            asn_id?: string | null;
            /** Time Zone */
            time_zone?: string | null;
            /** Description */
            description?: string | null;
            /** Physical Address */
            physical_address?: string | null;
            /** Shipping Address */
            shipping_address?: string | null;
            /** Latitude */
            latitude?: number | null;
            /** Longitude */
            longitude?: number | null;
            /** Contact Name */
            contact_name?: string | null;
            /** Contact Phone */
            contact_phone?: string | null;
            /** Contact Email */
            contact_email?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /**
         * SiteGroupCreate
         * @example {
         *       "description": "All DCs on the US East Coast",
         *       "name": "East Coast Data Centers",
         *       "slug": "east-coast-dcs"
         *     }
         */
        SiteGroupCreate: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Parent Id */
            parent_id?: string | null;
        };
        /** SiteGroupRead */
        SiteGroupRead: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Parent Id */
            parent_id?: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** SiteGroupUpdate */
        SiteGroupUpdate: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Parent Id */
            parent_id?: string | null;
        };
        /** SiteRead */
        SiteRead: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Status */
            status: string;
            /** Region Id */
            region_id?: string | null;
            /** Site Group Id */
            site_group_id?: string | null;
            /** Tenant Id */
            tenant_id?: string | null;
            /** Facility */
            facility?: string | null;
            /** Asn Id */
            asn_id?: string | null;
            /** Time Zone */
            time_zone?: string | null;
            /** Description */
            description?: string | null;
            /** Physical Address */
            physical_address?: string | null;
            /** Shipping Address */
            shipping_address?: string | null;
            /** Latitude */
            latitude?: number | null;
            /** Longitude */
            longitude?: number | null;
            /** Contact Name */
            contact_name?: string | null;
            /** Contact Phone */
            contact_phone?: string | null;
            /** Contact Email */
            contact_email?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** SiteUpdate */
        SiteUpdate: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Status */
            status?: string | null;
            /** Region Id */
            region_id?: string | null;
            /** Site Group Id */
            site_group_id?: string | null;
            /** Tenant Id */
            tenant_id?: string | null;
            /** Facility */
            facility?: string | null;
            /** Asn Id */
            asn_id?: string | null;
            /** Time Zone */
            time_zone?: string | null;
            /** Description */
            description?: string | null;
            /** Physical Address */
            physical_address?: string | null;
            /** Shipping Address */
            shipping_address?: string | null;
            /** Latitude */
            latitude?: number | null;
            /** Longitude */
            longitude?: number | null;
            /** Contact Name */
            contact_name?: string | null;
            /** Contact Phone */
            contact_phone?: string | null;
            /** Contact Email */
            contact_email?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /**
         * TenantCreate
         * @example {
         *       "comments": "Onboarded Q1 2024",
         *       "custom_fields": {
         *         "account_manager": "John Doe"
         *       },
         *       "description": "Primary enterprise customer",
         *       "name": "Customer Alpha",
         *       "slug": "customer-alpha"
         *     }
         */
        TenantCreate: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /** TenantRead */
        TenantRead: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** TenantUpdate */
        TenantUpdate: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /** Token */
        Token: {
            /** Access Token */
            access_token: string;
            /** Token Type */
            token_type: string;
            /** User Id */
            user_id: string;
            /** Tenant Id */
            tenant_id?: string | null;
            /** Username */
            username: string;
            /** Is Superuser */
            is_superuser: boolean;
        };
        /**
         * UserCreate
         * @example {
         *       "email": "johndoe@example.com",
         *       "is_active": true,
         *       "is_superuser": false,
         *       "password": "securepassword",
         *       "tenant_id": "550e8400-e29b-41d4-a716-446655440000",
         *       "username": "johndoe"
         *     }
         */
        UserCreate: {
            /** Username */
            username: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Is Active
             * @default true
             */
            is_active: boolean;
            /**
             * Is Superuser
             * @default false
             */
            is_superuser: boolean;
            /** Tenant Id */
            tenant_id?: string | null;
            /** Password */
            password: string;
        };
        /** UserRead */
        UserRead: {
            /** Username */
            username: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Is Active
             * @default true
             */
            is_active: boolean;
            /**
             * Is Superuser
             * @default false
             */
            is_superuser: boolean;
            /** Tenant Id */
            tenant_id?: string | null;
            /** Id */
            id: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
            /** Tenant Name */
            tenant_name?: string | null;
        };
        /**
         * VLANCreate
         * @example {
         *       "comments": "Standard wired user access",
         *       "custom_fields": {
         *         "qos_policy": "default"
         *       },
         *       "description": "Primary User VLAN for NYC Office",
         *       "group_id": 1,
         *       "name": "OFFICE-LAN",
         *       "role_id": 1,
         *       "site_id": 1,
         *       "status": "active",
         *       "tenant_id": 1,
         *       "vid": 10
         *     }
         */
        VLANCreate: {
            /** Site Id */
            site_id?: number | null;
            /** Group Id */
            group_id?: number | null;
            /** Vid */
            vid: number;
            /** Name */
            name: string;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Status */
            status: string;
            /** Role Id */
            role_id?: number | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /**
         * VLANGroupCreate
         * @example {
         *       "description": "VLANs specific to the NYC Office site",
         *       "max_vid": 99,
         *       "min_vid": 10,
         *       "name": "NYC Office VLANs",
         *       "scope_id": 1,
         *       "scope_type": "site",
         *       "slug": "nyc-office-vlans",
         *       "vlan_id_ranges": "10-20,30-40,50-60"
         *     }
         */
        VLANGroupCreate: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Scope Type */
            scope_type?: string | null;
            /** Scope Id */
            scope_id?: number | null;
            /** Min Vid */
            min_vid?: number | null;
            /** Max Vid */
            max_vid?: number | null;
            /**
             * Vlan Id Ranges
             * @description VLAN ID ranges in format like '1-20,60-90'
             */
            vlan_id_ranges?: string | null;
            /** Description */
            description?: string | null;
        };
        /** VLANGroupRead */
        VLANGroupRead: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Scope Type */
            scope_type?: string | null;
            /** Scope Id */
            scope_id?: number | null;
            /** Min Vid */
            min_vid?: number | null;
            /** Max Vid */
            max_vid?: number | null;
            /**
             * Vlan Id Ranges
             * @description VLAN ID ranges in format like '1-20,60-90'
             */
            vlan_id_ranges?: string | null;
            /** Description */
            description?: string | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** VLANGroupUpdate */
        VLANGroupUpdate: {
            /** Name */
            name?: string | null;
            /** Slug */
            slug?: string | null;
            /** Scope Type */
            scope_type?: string | null;
            /** Scope Id */
            scope_id?: number | null;
            /** Min Vid */
            min_vid?: number | null;
            /** Max Vid */
            max_vid?: number | null;
            /** Vlan Id Ranges */
            vlan_id_ranges?: string | null;
            /** Description */
            description?: string | null;
        };
        /** VLANRead */
        VLANRead: {
            /** Site Id */
            site_id?: number | null;
            /** Group Id */
            group_id?: number | null;
            /** Vid */
            vid: number;
            /** Name */
            name: string;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Status */
            status: string;
            /** Role Id */
            role_id?: number | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at?: string | null;
        };
        /** VLANUpdate */
        VLANUpdate: {
            /** Site Id */
            site_id?: number | null;
            /** Group Id */
            group_id?: number | null;
            /** Vid */
            vid?: number | null;
            /** Name */
            name?: string | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Status */
            status?: string | null;
            /** Role Id */
            role_id?: number | null;
            /** Description */
            description?: string | null;
            /** Comments */
            comments?: string | null;
            /** Custom Fields */
            custom_fields?: Record<string, never> | null;
        };
        /** VRFCreate */
        VRFCreate: {
            /** Name */
            name: string;
            /** Rd */
            rd?: string | null;
            /** Description */
            description?: string | null;
            /**
             * Enforce Unique
             * @default true
             */
            enforce_unique: boolean;
            /** Tenant Id */
            tenant_id?: number | null;
            /**
             * Import Target Ids
             * @default []
             */
            import_target_ids: number[] | null;
            /**
             * Export Target Ids
             * @default []
             */
            export_target_ids: number[] | null;
        };
        /** VRFReadWithTargets */
        VRFReadWithTargets: {
            /** Name */
            name: string;
            /** Rd */
            rd?: string | null;
            /** Description */
            description?: string | null;
            /**
             * Enforce Unique
             * @default true
             */
            enforce_unique: boolean;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Id */
            id: number;
            /**
             * Import Targets
             * @default []
             */
            import_targets: components["schemas"]["RouteTargetRead"][];
            /**
             * Export Targets
             * @default []
             */
            export_targets: components["schemas"]["RouteTargetRead"][];
        };
        /** VRFUpdate */
        VRFUpdate: {
            /** Name */
            name?: string | null;
            /** Rd */
            rd?: string | null;
            /** Description */
            description?: string | null;
            /** Enforce Unique */
            enforce_unique?: boolean | null;
            /** Tenant Id */
            tenant_id?: number | null;
            /** Import Target Ids */
            import_target_ids?: number[] | null;
            /** Export Target Ids */
            export_target_ids?: number[] | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_table_schema_api_v1_schema__table_name__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                table_name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_reference_options_api_v1_reference__table_name___field_name__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                table_name: string;
                field_name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>[];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_tables_api_v1_all_tables_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
        };
    };
    read_device_inventory_by_device_api_v1_device_inventory__device_uuid__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                device_uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DeviceInventoryRead"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_device_inventory_by_device_api_v1_device_inventory__device_uuid__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                device_uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_regions_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_RegionRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_regions_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegionCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RegionRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_regions__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RegionRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_regions__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegionUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RegionRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_regions__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_site_groups_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_SiteGroupRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_site_groups_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SiteGroupCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SiteGroupRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_site_groups__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SiteGroupRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_site_groups__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SiteGroupUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SiteGroupRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_site_groups__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_sites_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_SiteRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_sites_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SiteCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SiteRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_sites__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SiteRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_sites__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SiteUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SiteRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_sites__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_locations_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_LocationRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_locations_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LocationCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocationRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_locations__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocationRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_locations__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LocationUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocationRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_locations__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_rirs_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_RIRRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_rirs_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RIRCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RIRRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_rirs__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RIRRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_rirs__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RIRUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RIRRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_rirs__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_aggregates_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_AggregateRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_aggregates_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AggregateCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AggregateRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_aggregates__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AggregateRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_aggregates__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AggregateUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AggregateRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_aggregates__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_vrfs_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_VRFReadWithTargets_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_vrfs_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["VRFCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VRFReadWithTargets"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_vrfs__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VRFReadWithTargets"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_vrfs__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["VRFUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VRFReadWithTargets"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_vrfs__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_route_targets_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_RouteTargetRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_route_targets_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RouteTargetCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RouteTargetRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_route_targets__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RouteTargetRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_route_targets__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RouteTargetUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RouteTargetRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_route_targets__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_roles_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_RoleRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_roles_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RoleRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_roles__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RoleRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_roles__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RoleRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_roles__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_prefixes_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_PrefixRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_prefixes_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PrefixCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PrefixRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_prefixes__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PrefixRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_prefixes__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PrefixUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PrefixRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_prefixes__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_ip_ranges_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_IPRangeRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_ip_ranges_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IPRangeCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IPRangeRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_ip_ranges__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IPRangeRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_ip_ranges__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IPRangeUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IPRangeRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_ip_ranges__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_ip_addresses_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_IPAddressRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_ip_addresses_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IPAddressCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IPAddressRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_ip_addresses__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IPAddressRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_ip_addresses__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IPAddressUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IPAddressRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_ip_addresses__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_vlans_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_VLANRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_vlans_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["VLANCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VLANRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_vlans__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VLANRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_vlans__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["VLANUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VLANRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_vlans__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_vlan_groups_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_VLANGroupRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_vlan_groups_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["VLANGroupCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VLANGroupRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_vlan_groups__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VLANGroupRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_vlan_groups__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["VLANGroupUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VLANGroupRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_vlan_groups__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_platform_types_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_PlatformTypeRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_platform_types_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlatformTypeCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlatformTypeRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_platform_types__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlatformTypeRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_platform_types__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlatformTypeUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlatformTypeRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_platform_types__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_tenants_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_TenantRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_tenants_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TenantCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TenantRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_tenants__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TenantRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_tenants__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TenantUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TenantRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_tenants__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_interfaces_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_InterfaceRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_interfaces_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InterfaceCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InterfaceRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_interfaces__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InterfaceRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_interfaces__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InterfaceUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InterfaceRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_interfaces__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_device_inventory_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_DeviceInventoryRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_device_inventory_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeviceInventoryCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DeviceInventoryRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_device_inventory__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DeviceInventoryRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_device_inventory__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeviceInventoryUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DeviceInventoryRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_device_inventory__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_asns_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_ASNRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_asns_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ASNCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ASNRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_asns__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ASNRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_asns__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ASNUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ASNRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_asns__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_asn_ranges_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_ASNRangeRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_asn_ranges_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ASNRangeCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ASNRangeRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_asn_ranges__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ASNRangeRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_asn_ranges__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ASNRangeUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ASNRangeRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_asn_ranges__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_credentials_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_CredentialRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_credentials_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CredentialCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CredentialRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_credentials__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CredentialRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_credentials__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CredentialUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CredentialRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_credentials__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_v1_net_jobs_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                search?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_NetJobRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_net_jobs_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NetJobCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NetJobRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_v1_net_jobs__item_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NetJobRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_item_api_v1_net_jobs__item_id__put: {
        parameters: {
            query?: {
                current_crud_module?: unknown;
                current_UpdateSchema?: unknown;
                current_path?: unknown;
            };
            header?: never;
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NetJobUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NetJobRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_net_jobs__item_id__delete: {
        parameters: {
            query?: {
                current_crud_instance?: unknown;
                current_path?: string;
            };
            header?: never;
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    login_for_access_token_api_v1_auth_token_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_login_for_access_token_api_v1_auth_token_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    login_api_v1_auth_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    register_user_api_v1_auth_register_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_users_me_api_v1_auth_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
        };
    };
    root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
