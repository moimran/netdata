"""initial_commit

Revision ID: 376a27566ca7
Revises: 
Create Date: 2024-02-14 12:34:56.789012

"""
from alembic import op
import sqlalchemy as sa
from app.types import UUIDType
from app.models.fields import IPNetworkType
from sqlalchemy import String, Boolean, BigInteger, DateTime, Date, Enum

# revision identifiers, used by Alembic.
revision = '376a27566ca7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('credentials',
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('username', String(), nullable=False),
    sa.Column('password', String(), nullable=False),
    sa.Column('enable_password', String(), nullable=True),
    sa.Column('is_default', Boolean(), nullable=False),
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='ipam'
    )
    
    op.create_table('regions',
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('slug', String(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('parent_id', UUIDType(), nullable=True),
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['ipam.regions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='ipam'
    )
    
    op.create_table('rirs',
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('slug', String(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='ipam'
    )
    op.create_table('roles',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('slug', String(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('color', String(length=6), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='ipam'
    )
    op.create_table('route_targets',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='ipam'
    )
    op.create_table('site_groups',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('slug', String(), nullable=True),
    sa.Column('description', String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='ipam'
    )
    op.create_table('tenants',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('slug', String(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('comments', String(), nullable=True),
    sa.Column('parent_tenant_id', UUIDType(), nullable=True),
    sa.ForeignKeyConstraint(['parent_tenant_id'], ['ipam.tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='ipam'
    )
    op.create_table('vlan_groups',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('slug', String(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('min_vid', BigInteger(), nullable=False),
    sa.Column('max_vid', BigInteger(), nullable=False),
    sa.Column('vlan_id_ranges', String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='ipam'
    )
    op.create_table('platform_type',
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('created_at', DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', DateTime(timezone=True), nullable=True),
    sa.Column('name', String(), nullable=True),
    sa.Column('slug', String(), nullable=True),
    sa.Column('platform_signature', String(length=100), nullable=False),
    sa.Column('platform_type', String(length=100), nullable=False),
    sa.Column('command', String(length=100), nullable=True),
    sa.Column('ignore_platform', Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='ni'
    )
    op.create_index(op.f('ix_ni_platform_type_name'), 'platform_type', ['name'], unique=False, schema='ni')
    op.create_index(op.f('ix_ni_platform_type_platform_signature'), 'platform_type', ['platform_signature'], unique=True, schema='ni')
    op.create_index(op.f('ix_ni_platform_type_platform_type'), 'platform_type', ['platform_type'], unique=True, schema='ni')
    op.create_index(op.f('ix_ni_platform_type_slug'), 'platform_type', ['slug'], unique=False, schema='ni')
    op.create_table('aggregates',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('prefix', IPNetworkType(), nullable=True),
    sa.Column('date_added', Date(), nullable=True),
    sa.Column('rir_id', UUIDType(), nullable=False),
    sa.Column('tenant_id', UUIDType(), nullable=True),
    sa.ForeignKeyConstraint(['rir_id'], ['ipam.rirs.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['ipam.tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('prefix', name='uq_aggregate'),
    schema='ipam'
    )
    op.create_table('asn_ranges',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('slug', String(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('start', BigInteger(), nullable=True),
    sa.Column('end', BigInteger(), nullable=True),
    sa.Column('rir_id', UUIDType(), nullable=False),
    sa.ForeignKeyConstraint(['rir_id'], ['ipam.rirs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_asn_range_name'),
    sa.UniqueConstraint('slug', name='uq_asn_range_slug'),
    schema='ipam'
    )
    op.create_table('sites',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('slug', String(), nullable=True),
    sa.Column('description', String(), nullable=True),
    sa.Column('facility', String(), nullable=True),
    sa.Column('physical_address', String(), nullable=True),
    sa.Column('status', String(), nullable=False),
    sa.Column('tenant_id', UUIDType(), nullable=True),
    sa.Column('region_id', UUIDType(), nullable=True),
    sa.Column('site_group_id', UUIDType(), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['ipam.regions.id'], ),
    sa.ForeignKeyConstraint(['site_group_id'], ['ipam.site_groups.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['ipam.tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='ipam'
    )
    op.create_table('vrfs',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('rd', String(), nullable=True),
    sa.Column('description', String(), nullable=True),
    sa.Column('enforce_unique', Boolean(), nullable=False),
    sa.Column('tenant_id', UUIDType(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['ipam.tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('rd'),
    schema='ipam'
    )
    op.create_table('net_jobs',
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('name', String(length=100), nullable=False),
    sa.Column('slug', String(), nullable=True),
    sa.Column('created_at', DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', DateTime(timezone=True), nullable=True),
    sa.Column('job_uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('platform_type_id', BigInteger(), nullable=True),
    sa.Column('command_list', sa.ARRAY(sa.TEXT()), nullable=False),
    sa.Column('is_scheduled', Boolean(), nullable=False),
    sa.Column('next_run', DateTime(timezone=True), nullable=True),
    sa.Column('last_run', DateTime(timezone=True), nullable=True),
    sa.Column('connection_protocol', String(length=50), nullable=False),
    sa.Column('connection_library', String(length=50), nullable=False),
    sa.Column('is_encrypted', Boolean(), nullable=False),
    sa.Column('is_parse', Boolean(), nullable=False),
    sa.Column('extra_config', sa.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['platform_type_id'], ['ni.platform_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='jobs'
    )
    op.create_index(op.f('ix_jobs_net_jobs_job_uuid'), 'net_jobs', ['job_uuid'], unique=True, schema='jobs')
    op.create_index(op.f('ix_jobs_net_jobs_slug'), 'net_jobs', ['slug'], unique=False, schema='jobs')
    op.create_table('asns',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('number', BigInteger(), nullable=True),
    sa.Column('name', String(), nullable=False),
    sa.Column('slug', String(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('rir_id', UUIDType(), nullable=False),
    sa.Column('range_id', UUIDType(), nullable=False),
    sa.ForeignKeyConstraint(['range_id'], ['ipam.asn_ranges.id'], ),
    sa.ForeignKeyConstraint(['rir_id'], ['ipam.rirs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number', name='uq_asn_number'),
    sa.UniqueConstraint('slug', name='uq_asn_slug'),
    schema='ipam'
    )
    op.create_index(op.f('ix_ipam_asns_number'), 'asns', ['number'], unique=True, schema='ipam')
    op.create_table('ip_ranges',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('start_address', IPNetworkType(), nullable=True),
    sa.Column('end_address', IPNetworkType(), nullable=True),
    sa.Column('size', BigInteger(), nullable=False),
    sa.Column('status', Enum('ACTIVE', 'RESERVED', 'DEPRECATED', name='iprangestatusenum'), nullable=False),
    sa.Column('mark_utilized', Boolean(), nullable=False),
    sa.Column('vrf_id', UUIDType(), nullable=True),
    sa.Column('tenant_id', UUIDType(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['ipam.tenants.id'], ),
    sa.ForeignKeyConstraint(['vrf_id'], ['ipam.vrfs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('start_address', 'end_address', 'vrf_id', name='uq_iprange_vrf'),
    schema='ipam'
    )
    op.create_index(op.f('ix_ipam_ip_ranges_end_address'), 'ip_ranges', ['end_address'], unique=False, schema='ipam')
    op.create_index(op.f('ix_ipam_ip_ranges_start_address'), 'ip_ranges', ['start_address'], unique=False, schema='ipam')
    op.create_table('locations',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('slug', String(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('status', String(), nullable=False),
    sa.Column('site_id', UUIDType(), nullable=True),
    sa.Column('parent_id', UUIDType(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['ipam.locations.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['ipam.sites.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='ipam'
    )
    op.create_table('vlans',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('slug', String(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('vid', BigInteger(), nullable=False),
    sa.Column('status', Enum('ACTIVE', 'RESERVED', 'DEPRECATED', name='vlanstatusenum'), nullable=False),
    sa.Column('tenant_id', BigInteger(), nullable=True),
    sa.Column('site_id', BigInteger(), nullable=True),
    sa.Column('group_id', BigInteger(), nullable=True),
    sa.Column('role_id', BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['ipam.vlan_groups.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['ipam.roles.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['ipam.sites.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['ipam.tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'group_id', name='uq_vlan_name_group'),
    sa.UniqueConstraint('name', 'site_id', name='uq_vlan_name_site'),
    sa.UniqueConstraint('vid', 'group_id', name='uq_vlan_vid_group'),
    sa.UniqueConstraint('vid', 'site_id', name='uq_vlan_vid_site'),
    schema='ipam'
    )
    op.create_table('vrf_export_targets',
    sa.Column('vrf_id', sa.UUID(), nullable=False),
    sa.Column('route_target_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['route_target_id'], ['ipam.route_targets.id'], ),
    sa.ForeignKeyConstraint(['vrf_id'], ['ipam.vrfs.id'], ),
    sa.PrimaryKeyConstraint('vrf_id', 'route_target_id'),
    schema='ipam'
    )
    op.create_table('vrf_import_targets',
    sa.Column('vrf_id', sa.UUID(), nullable=False),
    sa.Column('route_target_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['route_target_id'], ['ipam.route_targets.id'], ),
    sa.ForeignKeyConstraint(['vrf_id'], ['ipam.vrfs.id'], ),
    sa.PrimaryKeyConstraint('vrf_id', 'route_target_id'),
    schema='ipam'
    )
    op.create_table('prefixes',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('prefix', IPNetworkType(), nullable=True),
    sa.Column('status', Enum('CONTAINER', 'ACTIVE', 'RESERVED', 'DEPRECATED', name='prefixstatusenum'), nullable=False),
    sa.Column('is_pool', Boolean(), nullable=False),
    sa.Column('mark_utilized', Boolean(), nullable=False),
    sa.Column('depth', BigInteger(), nullable=False),
    sa.Column('child_count', BigInteger(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('site_id', sa.UUID(), nullable=True),
    sa.Column('vrf_id', sa.UUID(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.Column('vlan_id', sa.UUID(), nullable=True),
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['ipam.prefixes.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['ipam.roles.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['ipam.sites.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['ipam.tenants.id'], ),
    sa.ForeignKeyConstraint(['vlan_id'], ['ipam.vlans.id'], ),
    sa.ForeignKeyConstraint(['vrf_id'], ['ipam.vrfs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('prefix', 'vrf_id', name='uq_prefix_vrf'),
    schema='ipam'
    )
    op.create_index(op.f('ix_ipam_prefixes_parent_id'), 'prefixes', ['parent_id'], unique=False, schema='ipam')
    op.create_index(op.f('ix_ipam_prefixes_prefix'), 'prefixes', ['prefix'], unique=False, schema='ipam')
    op.create_table('ip_addresses',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=True),
    sa.Column('slug', String(), nullable=True),
    sa.Column('description', String(), nullable=True),
    sa.Column('address', IPNetworkType(), nullable=True),
    sa.Column('status', Enum('ACTIVE', 'RESERVED', 'DEPRECATED', 'DHCP', 'SLAAC', name='ipaddressstatusenum'), nullable=False),
    sa.Column('role', Enum('LOOPBACK', 'SECONDARY', 'VIP', 'VRRP', 'HSRP', 'GLBP', 'ANYCAST', name='ipaddressroleenum'), nullable=True),
    sa.Column('dns_name', String(), nullable=True),
    sa.Column('prefix_id', sa.UUID(), nullable=True),
    sa.Column('vrf_id', sa.UUID(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['prefix_id'], ['ipam.prefixes.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['ipam.tenants.id'], ),
    sa.ForeignKeyConstraint(['vrf_id'], ['ipam.vrfs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address', 'vrf_id', name='uq_ipaddress_vrf'),
    schema='ipam'
    )
    op.create_index(op.f('ix_ipam_ip_addresses_address'), 'ip_addresses', ['address'], unique=False, schema='ipam')
    op.create_table('device_inventory',
    sa.Column('device_uuid', sa.UUID(), nullable=False),
    sa.Column('platform_type_id', BigInteger(), nullable=True),
    sa.Column('hostname', String(length=255), nullable=True),
    sa.Column('config_register', sa.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('hardware', sa.ARRAY(sa.TEXT()), nullable=True),
    sa.Column('mac_address', sa.ARRAY(sa.TEXT()), nullable=True),
    sa.Column('release', String(length=50), nullable=True),
    sa.Column('reload_reason', sa.TEXT(), nullable=True),
    sa.Column('restarted', DateTime(timezone=True), nullable=True),
    sa.Column('rommon', String(length=100), nullable=True),
    sa.Column('running_image', sa.TEXT(), nullable=True),
    sa.Column('serial', sa.ARRAY(sa.TEXT()), nullable=True),
    sa.Column('software_image', String(length=255), nullable=True),
    sa.Column('uptime_weeks', BigInteger(), nullable=True),
    sa.Column('uptime_days', BigInteger(), nullable=True),
    sa.Column('uptime_hours', BigInteger(), nullable=True),
    sa.Column('uptime_minutes', BigInteger(), nullable=True),
    sa.Column('uptime_years', BigInteger(), nullable=True),
    sa.Column('version', String(length=100), nullable=True),
    sa.Column('site_id', sa.UUID(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.Column('location_id', sa.UUID(), nullable=True),
    sa.Column('ip_address_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['ip_address_id'], ['ipam.ip_addresses.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['ipam.locations.id'], ),
    sa.ForeignKeyConstraint(['platform_type_id'], ['ni.platform_type.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['ipam.sites.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['ipam.tenants.id'], ),
    sa.PrimaryKeyConstraint('device_uuid'),
    schema='ni'
    )
    op.create_index(op.f('ix_ni_device_inventory_device_uuid'), 'device_inventory', ['device_uuid'], unique=False, schema='ni')
    op.create_table('interfaces',
    sa.Column('created_at', DateTime(), nullable=False),
    sa.Column('updated_at', DateTime(), nullable=True),
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('name', String(), nullable=False),
    sa.Column('description', String(), nullable=True),
    sa.Column('device_uuid', sa.UUID(), nullable=False),
    sa.Column('ip_address_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['device_uuid'], ['ni.device_inventory.device_uuid'], ),
    sa.ForeignKeyConstraint(['ip_address_id'], ['ipam.ip_addresses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_interface_name'),
    schema='ipam'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('interfaces', schema='ipam')
    op.drop_index(op.f('ix_ni_device_inventory_device_uuid'), table_name='device_inventory', schema='ni')
    op.drop_table('device_inventory', schema='ni')
    op.drop_index(op.f('ix_ipam_ip_addresses_address'), table_name='ip_addresses', schema='ipam')
    op.drop_table('ip_addresses', schema='ipam')
    op.drop_index(op.f('ix_ipam_prefixes_prefix'), table_name='prefixes', schema='ipam')
    op.drop_index(op.f('ix_ipam_prefixes_parent_id'), table_name='prefixes', schema='ipam')
    op.drop_table('prefixes', schema='ipam')
    op.drop_table('vrf_import_targets', schema='ipam')
    op.drop_table('vrf_export_targets', schema='ipam')
    op.drop_table('vlans', schema='ipam')
    op.drop_table('locations', schema='ipam')
    op.drop_index(op.f('ix_ipam_ip_ranges_start_address'), table_name='ip_ranges', schema='ipam')
    op.drop_index(op.f('ix_ipam_ip_ranges_end_address'), table_name='ip_ranges', schema='ipam')
    op.drop_table('ip_ranges', schema='ipam')
    op.drop_index(op.f('ix_ipam_asns_number'), table_name='asns', schema='ipam')
    op.drop_table('asns', schema='ipam')
    op.drop_index(op.f('ix_jobs_net_jobs_slug'), table_name='net_jobs', schema='jobs')
    op.drop_index(op.f('ix_jobs_net_jobs_job_uuid'), table_name='net_jobs', schema='jobs')
    op.drop_table('net_jobs', schema='jobs')
    op.drop_table('vrfs', schema='ipam')
    op.drop_table('sites', schema='ipam')
    op.drop_table('asn_ranges', schema='ipam')
    op.drop_table('aggregates', schema='ipam')
    op.drop_index(op.f('ix_ni_platform_type_slug'), table_name='platform_type', schema='ni')
    op.drop_index(op.f('ix_ni_platform_type_platform_type'), table_name='platform_type', schema='ni')
    op.drop_index(op.f('ix_ni_platform_type_platform_signature'), table_name='platform_type', schema='ni')
    op.drop_index(op.f('ix_ni_platform_type_name'), table_name='platform_type', schema='ni')
    op.drop_table('platform_type', schema='ni')
    op.drop_table('vlan_groups', schema='ipam')
    op.drop_table('tenants', schema='ipam')
    op.drop_table('site_groups', schema='ipam')
    op.drop_table('route_targets', schema='ipam')
    op.drop_table('roles', schema='ipam')
    op.drop_table('rirs', schema='ipam')
    op.drop_table('regions', schema='ipam')
    op.drop_index(op.f('ix_ipam_credentials_name'), table_name='credentials', schema='ipam')
    op.drop_table('credentials', schema='ipam')
    # ### end Alembic commands ###
