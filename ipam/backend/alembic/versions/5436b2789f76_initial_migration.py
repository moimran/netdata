"""Initial migration

Revision ID: 5436b2789f76
Revises: 
Create Date: 2025-02-27 00:20:31.259559

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects.postgresql import INET

# revision identifiers, used by Alembic.
revision = '5436b2789f76'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regions',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rirs',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=6), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('route_targets',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_route_targets_slug'), 'route_targets', ['slug'], unique=False)
    op.create_table('site_groups',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenants',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('comments', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vlan_groups',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('min_vid', sa.Integer(), nullable=False),
    sa.Column('max_vid', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('aggregates',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('prefix', sa.String(), nullable=False),
    sa.Column('date_added', sa.Date(), nullable=True),
    sa.Column('rir_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rir_id'], ['rirs.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_aggregates_name'), 'aggregates', ['name'], unique=False)
    op.create_index(op.f('ix_aggregates_prefix'), 'aggregates', ['prefix'], unique=False)
    op.create_index(op.f('ix_aggregates_slug'), 'aggregates', ['slug'], unique=False)
    op.create_table('asn_ranges',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('start', sa.Integer(), nullable=False),
    sa.Column('end', sa.Integer(), nullable=False),
    sa.Column('rir_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rir_id'], ['rirs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_asn_ranges_name'), 'asn_ranges', ['name'], unique=False)
    op.create_index(op.f('ix_asn_ranges_slug'), 'asn_ranges', ['slug'], unique=False)
    op.create_table('asns',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('asn', sa.Integer(), nullable=False),
    sa.Column('rir_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rir_id'], ['rirs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asn')
    )
    op.create_table('sites',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('facility', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('physical_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('contact_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('contact_email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('contact_phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('site_group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.ForeignKeyConstraint(['site_group_id'], ['site_groups.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vrfs',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('rd', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('enforce_unique', sa.Boolean(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vrfs_slug'), 'vrfs', ['slug'], unique=False)
    op.create_table('ip_addresses',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'RESERVED', 'DEPRECATED', 'DHCP', 'SLAAC', name='ipaddressstatusenum'), nullable=False),
    sa.Column('role', sa.Enum('LOOPBACK', 'SECONDARY', 'VIP', 'VRRP', 'HSRP', 'GLBP', 'ANYCAST', name='ipaddressroleenum'), nullable=True),
    sa.Column('dns_name', sa.String(length=255), nullable=True),
    sa.Column('vrf_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('nat_inside_id', sa.Integer(), nullable=True),
    sa.Column('assigned_object_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('assigned_object_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['nat_inside_id'], ['ip_addresses.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['vrf_id'], ['vrfs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ip_addresses_address'), 'ip_addresses', ['address'], unique=False)
    op.create_table('ip_ranges',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('start_address', sa.String(), nullable=False),
    sa.Column('end_address', sa.String(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'RESERVED', 'DEPRECATED', name='iprangestatusenum'), nullable=False),
    sa.Column('mark_utilized', sa.Boolean(), nullable=False),
    sa.Column('vrf_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['vrf_id'], ['vrfs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ip_ranges_end_address'), 'ip_ranges', ['end_address'], unique=False)
    op.create_index(op.f('ix_ip_ranges_name'), 'ip_ranges', ['name'], unique=False)
    op.create_index(op.f('ix_ip_ranges_slug'), 'ip_ranges', ['slug'], unique=False)
    op.create_index(op.f('ix_ip_ranges_start_address'), 'ip_ranges', ['start_address'], unique=False)
    op.create_table('locations',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vlans',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('vid', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'RESERVED', 'DEPRECATED', name='vlanstatusenum'), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['vlan_groups.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vrf_export_targets',
    sa.Column('vrf_id', sa.Integer(), nullable=False),
    sa.Column('route_target_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['route_target_id'], ['route_targets.id'], ),
    sa.ForeignKeyConstraint(['vrf_id'], ['vrfs.id'], ),
    sa.PrimaryKeyConstraint('vrf_id', 'route_target_id')
    )
    op.create_table('vrf_import_targets',
    sa.Column('vrf_id', sa.Integer(), nullable=False),
    sa.Column('route_target_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['route_target_id'], ['route_targets.id'], ),
    sa.ForeignKeyConstraint(['vrf_id'], ['vrfs.id'], ),
    sa.PrimaryKeyConstraint('vrf_id', 'route_target_id')
    )
    op.create_table('devices',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_devices_slug'), 'devices', ['slug'], unique=False)
    op.create_table('prefixes',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('prefix', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('CONTAINER', 'ACTIVE', 'RESERVED', 'DEPRECATED', name='prefixstatusenum'), nullable=False),
    sa.Column('is_pool', sa.Boolean(), nullable=False),
    sa.Column('mark_utilized', sa.Boolean(), nullable=False),
    sa.Column('depth', sa.Integer(), nullable=False),
    sa.Column('child_count', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('vrf_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('vlan_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['vlan_id'], ['vlans.id'], ),
    sa.ForeignKeyConstraint(['vrf_id'], ['vrfs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prefixes_prefix'), 'prefixes', ['prefix'], unique=False)
    op.create_table('interfaces',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interfaces_slug'), 'interfaces', ['slug'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_interfaces_slug'), table_name='interfaces')
    op.drop_table('interfaces')
    op.drop_index(op.f('ix_prefixes_prefix'), table_name='prefixes')
    op.drop_table('prefixes')
    op.drop_index(op.f('ix_devices_slug'), table_name='devices')
    op.drop_table('devices')
    op.drop_table('vrf_import_targets')
    op.drop_table('vrf_export_targets')
    op.drop_table('vlans')
    op.drop_table('locations')
    op.drop_index(op.f('ix_ip_ranges_start_address'), table_name='ip_ranges')
    op.drop_index(op.f('ix_ip_ranges_slug'), table_name='ip_ranges')
    op.drop_index(op.f('ix_ip_ranges_name'), table_name='ip_ranges')
    op.drop_index(op.f('ix_ip_ranges_end_address'), table_name='ip_ranges')
    op.drop_table('ip_ranges')
    op.drop_index(op.f('ix_ip_addresses_address'), table_name='ip_addresses')
    op.drop_table('ip_addresses')
    op.drop_index(op.f('ix_vrfs_slug'), table_name='vrfs')
    op.drop_table('vrfs')
    op.drop_table('sites')
    op.drop_table('asns')
    op.drop_index(op.f('ix_asn_ranges_slug'), table_name='asn_ranges')
    op.drop_index(op.f('ix_asn_ranges_name'), table_name='asn_ranges')
    op.drop_table('asn_ranges')
    op.drop_index(op.f('ix_aggregates_slug'), table_name='aggregates')
    op.drop_index(op.f('ix_aggregates_prefix'), table_name='aggregates')
    op.drop_index(op.f('ix_aggregates_name'), table_name='aggregates')
    op.drop_table('aggregates')
    op.drop_table('vlan_groups')
    op.drop_table('tenants')
    op.drop_table('site_groups')
    op.drop_index(op.f('ix_route_targets_slug'), table_name='route_targets')
    op.drop_table('route_targets')
    op.drop_table('roles')
    op.drop_table('rirs')
    op.drop_table('regions')
    # ### end Alembic commands ###
